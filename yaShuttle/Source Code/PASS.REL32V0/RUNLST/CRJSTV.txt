
                                              EXTERNAL SYMBOL DICTIONARY                                       PAGE    1
SYMBOL   TYPE  ID  ADDR  LENGTH  LD ID                                                         AP101S 3.0 09.37 07/22/05
CRJSTV    SD 0001 000000 00002E
#QSTBYTE  ER 0002
#QGTBYTE  ER 0003
#LCRJSTV  SD 0004 00002E 000002

         CRJSTV--RIGHT JUSTIFY CHARACTER STRING                                                                PAGE    2
  LOC  OBJECT CODE   ADR1 ADR2      SOURCE STATEMENT                                           AP101S 3.0 09.37 07/22/05
                                  2 *
                                  3 * WHEN DATA_REMOTE IS IN EFFECT, THE LDM INSTRUCTIONS ARE NEEDED
                                  4 * AROUND THE CALL TO THIS RTL ROUTINE BECAUSE R1/R3 IS USED AS
                                  5 * A BASE REGISTER. (CR12620)
                                  6 *
                                  7 CRJSTV   AMAIN                                                          00000200
                                  8+***********************************************************************
                                  9+*
                                 10+*        PRIMARY ENTRY POINT
                                 11+*
                                 12+***********************************************************************
00000                            13+CRJSTV   CSECT                                                          01-AMAIN
00000                            14+STACK    DSECT                                                          01-AMAIN
                                 15+*        DS    18H            STANDARD STACK AREA DEFINITION
00000                            16+         DS    F              PSW (LEFT HALF)                           01-AMAIN
00002                            17+         DS    2F             R0,R1                                     01-AMAIN
00006                            18+ARG2     DS    F              R2                                        01-AMAIN
00008                            19+         DS    F              R3                                        01-AMAIN
0000A                            20+ARG4     DS    F              R4                                        01-AMAIN
0000C                            21+ARG5     DS    F              R5                                        01-AMAIN
0000E                            22+ARG6     DS    F              R6                                        01-AMAIN
00010                            23+ARG7     DS    F              R7                                        01-AMAIN
                                 24+*        END OF STANDARD STACK AREA
                                 25+*        NO ADDITIONAL STACK STORAGE REQUIRED FOR THIS ROUTINE
00012                            26+STACKEND DS    0F             END OF COMBINED STACK AREA                01-AMAIN
00000                            27+CRJSTV   CSECT                                                          01-AMAIN
0000000                          28+         USING STACK,0        ADDRESS STACK AREA                        01-AMAIN
00000 B624 0000      0009 0000   29+         NIST  9(0),0         CLEAR ON ERROR INFO (LCL DATA PTR)        01-AMAIN
                                 31 *                                                                       00000300
                                 32 * RIGHT JUSTIFY C1 TO A LENGTH OF I.                                    00000400
                                 33 *                                                                       00000500
                                 34          INPUT R4,            CHARACTER(C1)                            X00000600
                                                   R5             INTEGER(I) SP                             00000700
0000004                          35+R4       EQU   4                                                        01-INPUT
0000005                          36+R5       EQU   5                                                        01-INPUT
                                 38          OUTPUT R2            CHARACTER(VAC)                            00000800
0000002                          39+R2       EQU   2                                                        01-OUTPU
                                 41          WORK  R1,R3,R6,F0                                              00000900
0000001                          42+R1       EQU   1                                                        01-WORK
0000003                          43+R3       EQU   3                                                        01-WORK
0000006                          44+R6       EQU   6                                                        01-WORK
0000000                          45+F0       EQU   0                                                        01-WORK
                                 47 *                                                                       00001000
                                 48 * ALGORITHM:                                                            00001100
                                 49 *   IF 255 <= I THEN                                                    00001200
                                 50 *     DESCRIPTOR(VAC) = 0 || 255; /* VAC => NO MAXIMUM LENGTH NEEDED */ 00001300
                                 51 *   ELSE                                                                00001400
                                 52 *     IF I < 0 THEN                                                     00001500
                                 53 *       DO;                                                             00001600
                                 54 *         SEND ERROR$(4:18);                                            00001700
                                 55 *         RETURN;                                                       00001800
                                 56 *       END;                                                            00001900
                                 57 *     ELSE                                                              00002000
                                 58 *       DESCRIPTOR(VAC) = 0 || I;                                       00002100
                                 59 *   NUMBER_OF_BLANKS = I - CURRENT_LENGTH(C1);                          00002200
                                 60 *   IF NUMBER_OF_BLANKS < 0 THEN                                        00002300
                                 61 *     DO;                                                               00002400
                                 62 *       SEND ERROR$(4:18);                                              00002500
                                 63 *       NAME(C1) = NAME(C1$(# - I - 1));                                00002600
                                 64 *     END;                                                              00002700
                                 65 *   ELSE                                                                00002800
                                 66 *     IF NUMBER_OF_BLANKS ^= 0 THEN                                     00002900
                                 67 *       DO FOR K = 1 TO NUMBER_OF_BLANKS;                               00003000
                                 68 *         VAC$(K) = HEX'0020';                                          00003100
                                 69 *       END;                                                            00003200
                                 70 *   IF CURRENT_LENGTH(C1) = 0 THEN                                      00003300
                                 71 *     RETURN;                                                           00003400
                                 72 *   DO FOR L = 1 TO CURRENT_LENGTH(C1);                                 00003500
                                 73 *     VAC$(K + L - 1) = C1$(L);                                         00003600
                                 74 *   END;                                                                00003700
                                 75 *                                                                       00003800
00002 19E2                       76          LR    R1,R2          PUT VAC PTR INTO R1                       00003900
00003 1AE4                       77          LR    R2,R4          PUT C1 PTR INTO R2 FOR ADDRESSABILITY     00004000
00004 EBF3 00FF      00FF        78          LA    R3,255         MAX LENGTH OF RESULT                      00004100
00006 13E5                       79          CR    R3,R5          COMPARE 255 WITH I                        00004200
00007 DE08           000A 0002   80          BNH   SETLEN         BR IF SUPPLIED >=255                      00004300
         CRJSTV--RIGHT JUSTIFY CHARACTER STRING                                                                PAGE    3
  LOC  OBJECT CODE   ADR1 ADR2      SOURCE STATEMENT                                           AP101S 3.0 09.37 07/22/05
00008 1BE5                       81          LR    R3,R5          SET R3=SUPPLIED LEN AND TEST FOR <0       00004400
00009 DA50           001E 0014   82          BM    NEGLEN         BR IF <0 TO GIVE NULL RESULT              00004500
                                 83 *                                                                       00004600
                                 84 *        R3 HAS RESULT LENGTH: 0<=(R3)<=255                             00004700
                                 85 *                                                                       00004800
0000A BB01           0000        86 SETLEN   STH   R3,0(R1)       SET ACTUAL LEN OF TEMPORARY RESULT        00004900
                                 87 *                                                                       00005000
                                 88 * NOTE:  THIS SETS MAX LEN=0 - OK SINCE ITS TEMP                        00005100
                                 89 *                                                                       00005200
0000B 9E02           0000        90          LH    R6,0(R2)       GET C1 DESCRIPTOR                         00005300
0000C B6E6 00FF           00FF   91          NHI   R6,X'00FF'     MASK OUT MAX LEN                          00005400
0000E 0BE6                       92          SR    R3,R6          COMPUTE # PAD CHARS                       00005500
0000F DC18           0016 0006   93          BZ    NOBLANKS       IF = 0 THEN PADDING NOT NECESSARY         00005600
00010 DA44           0022 0011   94          BM    TRUNCATE       IF < 0 THEN TRUNCATION ERROR              00005700
                                 95 *                                                                       00005800
                                 96 *        BLANK (R3) CHARS OF RESULT                                     00005900
                                 97 *                                                                       00006000
00011 EDF3 0020      0020        98 BLANKIT  LHI   R5,X'0020'     R5=DEU BLANK                              00006100
                                 99          ABAL  STBYTE         STORE ONE BLANK                           00006200
                                100+         EXTRN #QSTBYTE                                                 01-ABAL
00013 E4F7                      101+         DC  X'E4F7'          CALL INTRINSIC INDIRECTLY                 01-ABAL
00014 3800                      102+         DC  Y(#QSTBYTE+X'3800')                                       X01-ABAL
                                   +                              THROUGH QCON
00015 DB17           0011 0005  103          BCTB  R3,BLANKIT     LOOP (R3) TIMES                           00006300
                                104 *                                                                       00006400
                                105 *        MOVE (R6) CHARS FROM INPUT STR TO RESULT                       00006500
                                106 *                                                                       00006600
00016 1EE6                      107 NOBLANKS LR    R6,R6          TEST # OF INPUT CHARS TO MOVE             00006700
00017 DE14           001D 0005  108          BNP   EXIT           BR IF NONE TO MOVE                        00006800
                                109 MOVEIT   ABAL  GTBYTE         GET ONE CHAR                              00006900
                                110+         EXTRN #QGTBYTE                                                 01-ABAL
00018 E4F7                      111+MOVEIT   DC  X'E4F7'          CALL INTRINSIC INDIRECTLY                 01-ABAL
00019 3800                      112+         DC  Y(#QGTBYTE+X'3800')                                       X01-ABAL
                                   +                              THROUGH QCON
                                113          ABAL  STBYTE         STORE ONE CHAR                            00007000
0001A E4F7                      114+         DC  X'E4F7'          CALL INTRINSIC INDIRECTLY                 01-ABAL
0001B 3800                      115+         DC  Y(#QSTBYTE+X'3800')                                       X01-ABAL
                                   +                              THROUGH QCON
0001C DE17           0018 0005  116          BCTB  R6,MOVEIT      LOOP (R6) TIMES                           00007100
                                117 *                                                                       00007200
                                118 EXIT     AEXIT                                                          00007300
                                119+*********RETURN TO CALLER**********************************************
0001D                           120+EXIT     DS    0H                                                       01-AEXIT
0001D 97E8                      121+$RET1    SRET  7,0            RETURN TO CALLER                          01-AEXIT
                                122+***********************************************************************
                                124 *                                                                       00007400
                                125 *        NEGATIVE SUPPLIED LENGTH                                       00007500
                                126 *                                                                       00007600
0001E A101           0000       127 NEGLEN   ZH    0(R1)          SET RESULT TO NULL STRING                 00007700
                                128          AERROR 18            ERROR: NEGATIVE LENGTH TO RJUST           00007800
                                129+*********ISSUE SEND ERROR SVC******************************************
0001F C9FB 002E      002E       130+         SVC   AERROR1        ISSUE SEND ERROR SVC                      01-AERRO
                                131+*********SEND ERROR SVC RETURNS CONTROL FOR STANDARD FIXUP*************
00021 DF16           001D 0005  132          B     EXIT                                                     00007900
                                133 *                                                                       00008000
                                134 *        SUPPLIED LENGTH LESS THAN INPUT STR LENGTH                     00008100
                                135 *                                                                       00008200
                                136 TRUNCATE AERROR 18            ERROR: RJUST TRUNCATION                   00008300
                                137+*********ISSUE SEND ERROR SVC******************************************
00022 C9FB 002E      002E       138+TRUNCATE SVC   AERROR1        ISSUE SEND ERROR SVC                      01-AERRO
                                139+*********SEND ERROR SVC RETURNS CONTROL FOR STANDARD FIXUP*************
00024 06E3                      140          AR    R6,R3          REGENERATE RESULT LENGTH                  00008400
00025 EDEB                      141          LACR  R5,R3          R5=# CHARS TO SKIP OVER IN INPUT STR      00008500
00026 F505                0001  142          SRA   R5,1           R5=# HALFWORDS "                          00008600
00027 02E5                      143          AR    R2,R5          INCREMENT INPUT STR PTR                   00008700
00028 B3E3 0001           0001  144          TRB   R3,X'0001'     IS SKIP CHAR COUNT ODD?                   00008800
0002A DC56           0016 0015  145          BZ    NOBLANKS       BR IF NOT TO COPY CHARS                   00008900
0002B E2FB 8000      8000       146          IAL   R2,X'8000'     SET ODD CHAR FLAG IN BYTE PTR FOR GTBYTE  00009000
0002D DF62           0016 0018  147          B     NOBLANKS       GO TRANSFER CHARS                         00009100
                                148          ACLOSE                                                         00009200
0002E                           149+         LTORG                                                          02-ERRPA
                                150+****************ERROR PARAMETER AREA***********************************
0002E                           151+#LCRJSTV CSECT                                                          02-ERRPA
                                152+***  CRJSTV SENDS THE FOLLOWING ERROR                                   02-ERRPA
                                154+***  ERROR NUMBER 18 IN GROUP 4                                         02-ERRPA
0002E 0014                      156+AERROR1  DC    H'20'          SVC CODE FOR SEND ERROR                   02-ERRPA
         CRJSTV--RIGHT JUSTIFY CHARACTER STRING                                                                PAGE    4
  LOC  OBJECT CODE   ADR1 ADR2      SOURCE STATEMENT                                           AP101S 3.0 09.37 07/22/05
0002F 0412                      157+         DC    Y(4*256+18)                      8 BIT GROUP AND NUMBER  02-ERRPA
                                158+****************END OF ERROR PARAMETER AREA****************************
                                159+         END                                                            01-ACLOS

                                                 RELOCATION DICTIONARY                                         PAGE    5
 POS.ID   REL.ID   FLAGS   ADDRESS                                                             AP101S 3.0 09.37 07/22/05
  0001     0002     00     000014
  0001     0002     00     00001B
  0001     0003     00     000019
  0001     0004     00     000020
  0001     0004     00     000023

                                             CROSS REFERENCE                                                   PAGE    6
SYMBOL    LEN    VALUE   DEFN   REFERENCES                                                     AP101S 3.0 09.37 07/22/05
AERROR1      1   00002E   156    130   138
ARG2         2   000006    18
ARG4         2   00000A    20
ARG5         2   00000C    21
ARG6         2   00000E    22
ARG7         2   000010    23
BLANKIT      2   000011    98    103
CRJSTV       1 00000000    13     27
EXIT         1   00001D   120    108   132
F0           1 00000000    45
MOVEIT       1   000018   111    116
NEGLEN       2   00001E   127     82
NOBLANKS     1   000016   107     93   145   147
R1           1 00000001    42     76    86    86   127   127
R2           1 00000002    39     76    77    90    90   143   146
R3           1 00000003    43     78    79    81    86    92   103   140   141   144
R4           1 00000004    35     77
R5           1 00000005    36     79    81    98   141   142   143
R6           1 00000006    44     90    91    92   107   107   116   140
SETLEN       2   00000A    86     80
STACK        1 00000000    14     28
STACKEND     2   000012    26
TRUNCATE     2   000022   138     94
$RET1        1   00001D   121
#LCRJSTV     1 0000002E   151
#QGTBYTE     1 00000000   110    112
#QSTBYTE     1 00000000   100    102   115

                                  DIAGNOSTIC CROSS REFERENCE AND ASSEMBLER SUMMARY                             PAGE    7
                                                                                               AP101S 3.0 09.37 07/22/05
     NO STATEMENTS FLAGGED IN THIS ASSEMBLY
   OVERRIDING PARAMETERS-  ESD,RLD,SYSPARM=PASS
   OPTIONS FOR THIS ASSEMBLY
    NODECK,LOAD,LIST,XREF,NORENT,TEST,NOMULT,ALGN,ESD ,RLD ,NOSREF,LINECT= 80,MSGLEVEL=   0,SYSPARM= PASS
   NO OVERRIDING DD NAMES
      97 CARDS FROM SYSIN     424 CARDS FROM SYSLIB
     217 LINES OUTPUT          13 CARDS OUTPUT
