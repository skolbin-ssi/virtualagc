
                                              EXTERNAL SYMBOL DICTIONARY                                       PAGE    1
SYMBOL   TYPE  ID  ADDR  LENGTH  LD ID                                                         AP101S 3.0 09.39 07/22/05
MM17D3    SD 0001 000000 000050
MM17DN    LD      000004        0001

         MM17D3--MATRIX TO A POWER, DP                                                                         PAGE    2
  LOC  OBJECT CODE   ADR1 ADR2      SOURCE STATEMENT                                           AP101S 3.0 09.39 07/22/05
                                  2 *
                                  3 * WHEN DATA_REMOTE IS IN EFFECT, THE LDM INSTRUCTIONS ARE NEEDED
                                  4 * AROUND THE CALL TO THIS RTL ROUTINE BECAUSE R1/R3 IS USED AS
                                  5 * A BASE REGISTER. (CR12620)
                                  6 *
                                  7          MACRO                                                          00000200
                                  8          WORKAREA                                                       00000300
                                  9 EXPSAVE  DS    H                                                        00000400
                                 10 NSAVE    DS    H                                                        00000500
                                 11          MEND                                                           00000600
                                 12 MM17D3   AMAIN                                                          00000700
                                 13+***********************************************************************
                                 14+*
                                 15+*        PRIMARY ENTRY POINT
                                 16+*
                                 17+***********************************************************************
00000                            18+MM17D3   CSECT                                                          01-AMAIN
00000                            19+STACK    DSECT                                                          01-AMAIN
                                 20+*        DS    18H            STANDARD STACK AREA DEFINITION
00000                            21+         DS    F              PSW (LEFT HALF)                           01-AMAIN
00002                            22+         DS    2F             R0,R1                                     01-AMAIN
00006                            23+ARG2     DS    F              R2                                        01-AMAIN
00008                            24+         DS    F              R3                                        01-AMAIN
0000A                            25+ARG4     DS    F              R4                                        01-AMAIN
0000C                            26+ARG5     DS    F              R5                                        01-AMAIN
0000E                            27+ARG6     DS    F              R6                                        01-AMAIN
00010                            28+ARG7     DS    F              R7                                        01-AMAIN
                                 29+*        END OF STANDARD STACK AREA
00012                            30+EXPSAVE  DS    H                                                        02-00009
00013                            31+NSAVE    DS    H                                                        02-00010
00014                            32+STACKEND DS    0F             END OF COMBINED STACK AREA                01-AMAIN
00000                            33+MM17D3   CSECT                                                          01-AMAIN
0000000                          34+         USING STACK,0        ADDRESS STACK AREA                        01-AMAIN
00000 B624 0000      0009 0000   35+         NIST  9(0),0         CLEAR ON ERROR INFO (LCL DATA PTR)        01-AMAIN
                                 37 *                                                                       00000800
                                 38 * RAISES M TO AN INTEGER POWER WHERE M IS A DOUBLE PRECISION            00000900
                                 39 *   3 X 3 MATRIX.                                                       00001000
                                 40 *                                                                       00001100
                                 41          INPUT R4,            MATRIX(3,3) DP                           X00001200
                                                   R6,            INTEGER(POWER) SP                        X00001300
                                                   R7             MATRIX(3,3) DP TEMPORARY WORKAREA         00001400
0000004                          42+R4       EQU   4                                                        01-INPUT
0000006                          43+R6       EQU   6                                                        01-INPUT
0000007                          44+R7       EQU   7                                                        01-INPUT
                                 46          OUTPUT R2            MATRIX(3,3) DP                            00001500
0000002                          47+R2       EQU   2                                                        01-OUTPU
                                 49          WORK  R1,R3,R5,F0,F2,F3,F4,F5                                  00001600
0000001                          50+R1       EQU   1                                                        01-WORK
0000003                          51+R3       EQU   3                                                        01-WORK
0000005                          52+R5       EQU   5                                                        01-WORK
0000000                          53+F0       EQU   0                                                        01-WORK
0000002                          54+F2       EQU   2                                                        01-WORK
0000003                          55+F3       EQU   3                                                        01-WORK
0000004                          56+F4       EQU   4                                                        01-WORK
0000005                          57+F5       EQU   5                                                        01-WORK
                                 59 *                                                                       00001700
                                 60 * ALGORITHM:                                                            00001800
                                 61 *   RESULT = M M;                                                       00001900
                                 62 *   IF POWER = 2 THEN                                                   00002000
                                 63 *     RETURN;                                                           00002100
                                 64 *   ELSE                                                                00002200
                                 65 *     DO;                                                               00002300
                                 66 *       POWER = SHL(POWER,1) + 1;                                       00002400
                                 67 *       DO WHILE SUBBIT$(1)(POWER) = 0;                                 00002500
                                 68 *         POWER = SHL(POWER,1);                                         00002600
                                 69 *       END;                                                            00002700
                                 70 *       POWER = SHL(POWER,1);                                           00002800
                                 71 *       DO WHILE TRUE;                                                  00002900
                                 72 *         IF SUBBIT$(1)(POWER) = ON THEN                                00003000
                                 73 *           DO;                                                         00003100
                                 74 *             TEMPORARY = RESULT;                                       00003200
                                 75 *             RESULT = TEMPORARY M;                                     00003300
                                 76 *           END;                                                        00003400
                                 77 *         POWER = SHL(POWER,1);                                         00003500
                                 78 *         IF POWER = HEX'8000' THEN                                     00003600
                                 79 *           EXIT;                                                       00003700
         MM17D3--MATRIX TO A POWER, DP                                                                         PAGE    3
  LOC  OBJECT CODE   ADR1 ADR2      SOURCE STATEMENT                                           AP101S 3.0 09.39 07/22/05
                                 80 *         ELSE                                                          00003800
                                 81 *           DO;                                                         00003900
                                 82 *             TEMPORARY = RESULT;                                       00004000
                                 83 *             RESULT = TEMPORARY TEMPORARY;                             00004100
                                 84 *           END;                                                        00004200
                                 85 *       END;                                                            00004300
                                 86 *     END;                                                              00004400
                                 87 *                                                                       00004500
00002 BDE5                0005   88          LFXI  R5,3           SET SIZE TO 3                             00004600
00003 DF08           0006 0002   89          B     MERGE                                                    00004700
                                 90 MM17DN   AENTRY                                                         00004800
                                 91+***********************************************************************
                                 92+*
                                 93+*        SECONDARY ENTRY POINT
                                 94+*
                                 95+***********************************************************************
00004                            96+MM17DN   DS    0H                                                       01-AENTR
                                 97+         ENTRY MM17DN                                                   01-AENTR
00004 B624 0000      0009 0000   98+         NIST  9(0),0         CLEAR ERROR VECTOR POINTER                01-AENTR
                                100 *                                                                       00004900
                                101 * RAISES M TO AN INTEGER POWER WHERE M IS A DOUBLE PRECISION            00005000
                                102 *   MATRIX OF DIMENSIONS N X N WHERE N IS NOT EQUAL TO 3.               00005100
                                103 *                                                                       00005200
                                104          INPUT R4,            MATRIX(N,N) DP                           X00005300
                                                   R5,            INTEGER(N) SP                            X00005400
                                                   R6,            INTEGER(POWER)                           X00005500
                                                   R7             MATRIX(N,N) DP TEMPORARY WORKAREA         00005600
                                106          OUTPUT R2            MATRIX(N,N) DP                            00005700
                                108          WORK  R1,R3,F0,F2,F3,F4,F5                                     00005800
                                110 *                                                                       00005900
                                111 * ALGORITHM:                                                            00006000
                                112 *   SEE ALGORITHM DESCRIPTION ABOVE                                     00006100
                                113 *                                                                       00006200
00006 19E2                      114 MERGE    LR    R1,R2          PUT RESULT ADDRESS IN R1 FOR              00006300
                                115 *                             ADDRESSABILITY PURPOSES                   00006400
00007 1AE4                      116          LR    R2,R4                 "           "                      00006500
00008 1BE7                      117          LR    R3,R7                 "           "                      00006600
00009 BD4C           0013       118          STH   R5,NSAVE       SAVE N IN NSAVE                           00006700
0000A 1CE5                      119          LR    R4,R5          LOAD N INTO R4                            00006800
0000B F408                0002  120          SLL   R4,2           SET R4 = N * 4                            00006900
0000C 1BE2                      121          LR    R3,R2          LOAD INPUT ADDRESS INTO R3                00007000
0000D E7F7 0023      0032 0023  122          BAL   R7,MULT        BRANCH TO THE MULTIPLY ROUTINE            00007100
                                123 *                             THIS GETS RESULT = M ** 2;                00007200
0000F 96F7 003D      004E 003D  124          CH    R6,=X'0002'                                              00007300
00011 DC54           0027 0015  125          BE    OUT            IF POWER = 2 THEN RETURN                  00007400
00012 F604                0001  126          SLL   R6,1                                                     00007500
00013 B0E6 0001           0001  127          AHI   R6,1           SET R6 TO SHL(POWER,1) + 1                00007600
00015 B3E6 8000           8000  128 SHIFTED  TRB   R6,X'8000'     TEST BIT TO BE SHIFTED OFF                00007700
00017 F604                0001  129          SLL   R6,1                                                     00007800
00018 DC12           0015 0004  130          BC    4,SHIFTED      IF HIGH ORDER BIT 0 THEN CONTINUE         00007900
                                131 *                             TO SEARCH FOR SIGNIFICANT BIT             00008000
00019 DF0C           001D 0003  132          B     TEST           TAKEN WHEN HIGHER ORDER BIT WAS 1         00008100
0001A 9B40           0010       133 COMPLOOP LH    R3,ARG7        PASS TEMPORARY AS RIGHT MULTIPLIER        00008200
0001B E7F7 000B      0028 000B  134          BAL   R7,MOVE                                                  00008300
0001D B3E6 8000           8000  135 TEST     TRB   R6,X'8000'     TEST BIT TO BE SHIFTED OFF                00008400
0001F F604                0001  136          SLL   R6,1                                                     00008500
00020 DC0C           0024 0003  137          BC    4,NOBIT        IF NO 1 WAS SHIFTED OFF DON'T MULTIPLY    00008600
00021 9B28           000A       138          LH    R3,ARG4        PASS M AS RIGHT MULTIPLIER                00008700
00022 E7F7 0004      0028 0004  139          BAL   R7,MOVE                                                  00008800
00024 96F7 0029      004F 0029  140 NOBIT    CH    R6,=X'8000'    TEST DONE BIT                             00008900
00026 DB36           001A 000D  141          BNE   COMPLOOP       IF NOT EQUAL THEN CONTINUE PROCESSING     00009000
                                142 OUT      AEXIT                                                          00009100
                                143+*********RETURN TO CALLER**********************************************
00027                           144+OUT      DS    0H                                                       01-AEXIT
00027 97E8                      145+$RET1    SRET  7,0            RETURN TO CALLER                          01-AEXIT
                                146+***********************************************************************
                                148 *                                                                       00009200
                                149 * THE NEXT 7 INSTRUCTIONS MOVES RESULT TO TEMPORARY                     00009300
                                150 *                                                                       00009400
00028 9918           0006       151 MOVE     LH    R1,ARG2        PUT ADDRESS OF RESULT IN R1               00009500
00029 9D4C           0013       152          LH    R5,NSAVE       PLACE N INTO R5                           00009600
0002A 9DF8 0013      0013       153          MIH   R5,NSAVE       PUT N ** 2 IN R5                          00009700
0002C 9A40           0010       154          LH    R2,ARG7        GET ADDRESS OF TEMPORARY AREA IN R2       00009800
0002D 78FD A000      0000       155 MLOOP    LED   F0,0(R5,R1)    GET ELEMENT OF RESULT                     00009900
0002F 38FE A000      0000       156          STED  F0,0(R5,R2)    STORE ELEMENT INTO TEMPORARY              00010000
         MM17D3--MATRIX TO A POWER, DP                                                                         PAGE    4
  LOC  OBJECT CODE   ADR1 ADR2      SOURCE STATEMENT                                           AP101S 3.0 09.39 07/22/05
00031 DD17           002D 0005  157          BCTB  R5,MLOOP                                                 00010100
                                158 *                                                                       00010200
                                159 * THE FOLLOWING CODE PERFORMS THE MATRIX MULTIPLY OF EITHER             00010300
                                160 *   RESULT = TEMPORARY TEMPORARY; OR                                    00010400
                                161 *   RESULT = TEMPORARY M;                                               00010500
                                162 * THE POINTER IN R3 DETERMINES WHICH CASE IS TO BE PERFORMED.           00010600
                                163 *                                                                       00010700
                                164 *   R1 POINTS TO RESULT                                                 00010800
                                165 *   R2 POINTS TO TEMPORARY                                              00010900
                                166 *   R3 POINTS TO EITHER TEMPORARY OR M                                  00011000
                                167 *                                                                       00011100
00032 BE48           0012       168 MULT     STH   R6,EXPSAVE     SAVE EXPONENT ON STACK                    00011200
00033 2CEF                      169          LFLR  F4,R7          SAVE RETURN IN F4                         00011300
00034 9D4C           0013       170          LH    R5,NSAVE       SET R5 TO N                               00011400
00035 9F4C           0013       171 LOOP3    LH    R7,NSAVE       SET R7 TO N                               00011500
00036 9E4C           0013       172 LOOP2    LH    R6,NSAVE       SET R6 TO N                               00011600
00037 2DEB                      173          LFLR  F5,R3          SAVE PTR TO COLUMN OF RIGHT MATRIX        00011700
00038 58E8                      174          SEDR  F0,F0          CLEAR F0                                  00011800
00039 7A0B           0004       175 LOOP1    LE    F2,4(R3)       GET LEFT HALF OF RIGHT MATRIX             00011900
0003A 7B0F           0006       176          LE    F3,6(R3)       GET RIGHT HALF OF RIGHT MATRIX            00012000
0003B 32FA 0004      0004       177          MED   F2,4(R2)       MULTIPLY BY ELEMENT OF LEFT MATRIX        00012100
0003D 50EA                      178          AEDR  F0,F2          USING F0 AS ACCUMULATOR,                  00012200
                                179 *                             STORE PRODUCT                             00012300
0003E 03E4                      180          AR    R3,R4          BUMP RIGHT MATRIX POINTER TO NEXT         00012400
                                181 *                             ELEMENT IN COLUMN                         00012500
0003F EA12           0004       182          LA    R2,4(R2)       BUMP LEFT MATRIX POINTER ALONG ROW        00012600
00040 DE23           0039 0008  183          BCTB  R6,LOOP1                                                 00012700
00041 38F9 0004      0004       184          STED  F0,4(R1)       STORE ACCUMULATED RESULT IN RESULT        00012800
00043 E911           0004       185          LA    R1,4(R1)       BUMP RESULT PTR TO NEXT ELEMENT           00012900
00044 0AE4                      186          SR    R2,R4          RESET LEFT MATRIX PTR TO BEGINNING OF ROW 00013000
00045 23ED                      187          LFXR  R3,F5          RESTORE RIGHT MATRIX PTR TO BEGINNING     00013100
                                188 *                             OF COLUMN                                 00013200
00046 EB13           0004       189          LA    R3,4(R3)       BUMP RIGHT MATRIX PTR TO NEXT COLUMN      00013300
00047 DF4B           0036 0012  190          BCTB  R7,LOOP2                                                 00013400
00048 02E4                      191          AR    R2,R4          BUMP LEFT MATRIX PTR TO NEXT ROW          00013500
00049 0BE4                      192          SR    R3,R4          RESET RIGHT MATRIX PTR TO FIRST COLUMN    00013600
0004A DD5B           0035 0016  193          BCTB  R5,LOOP3                                                 00013700
0004B 27EC                      194          LFXR  R7,F4          RESTORE RETURN ADDRESS                    00013800
0004C 9E48           0012       195          LH    R6,EXPSAVE     RESTORE EXPONENT                          00013900
0004D C7E7                      196          BR    R7             RETURN                                    00014000
                                197          ACLOSE                                                         00014100
0004E                           198+         LTORG                                                          02-ERRPA
0004E 0002                      199                =X'0002'
0004F 8000                      200                =X'8000'
                                201+****************ERROR PARAMETER AREA***********************************
                                202+***  NO ERRORS SENT IN MM17D3                                           02-ERRPA
                                203+****************END OF ERROR PARAMETER AREA****************************
                                204+         END                                                            01-ACLOS

                                             CROSS REFERENCE                                                   PAGE    5
SYMBOL    LEN    VALUE   DEFN   REFERENCES                                                     AP101S 3.0 09.39 07/22/05
ARG2         2   000006    23    151
ARG4         2   00000A    25    138
ARG5         2   00000C    26
ARG6         2   00000E    27
ARG7         2   000010    28    133   154
COMPLOOP     2   00001A   133    141
EXPSAVE      1   000012    30    168   195
F0           1 00000000    53    155   156   174   174   178   184
F2           1 00000002    54    175   177   178
F3           1 00000003    55    176
F4           1 00000004    56    169   194
F5           1 00000005    57    173   187
LOOP1        2   000039   175    183
LOOP2        2   000036   172    190
LOOP3        2   000035   171    193
MERGE        1   000006   114     89
MLOOP        2   00002D   155    157
MM17D3       1 00000000    18     33
MM17DN       1   000004    96     97
MOVE         2   000028   151    134   139
MULT         2   000032   168    122
NOBIT        2   000024   140    137
NSAVE        1   000013    31    118   152   153   170   171   172
OUT          1   000027   144    125
R1           1 00000001    50    114   151   155   184   184   185   185   185
R2           1 00000002    47    114   116   121   154   156   177   177   182   182   182   186   191
R3           1 00000003    51    117   121   133   138   173   175   175   176   176   180   187   189   189   189   192
R4           1 00000004    42    116   119   120   180   186   191   192
R5           1 00000005    52     88   118   119   152   153   155   155   156   156   157   170   193
R6           1 00000006    43    124   126   127   128   129   135   136   140   168   172   183   195
R7           1 00000007    44    117   122   134   139   169   171   190   194   196
SHIFTED      2   000015   128    130
STACK        1 00000000    19     34
STACKEND     2   000014    32
TEST         2   00001D   135    132
$RET1        1   000027   145
=X'0002'     1   00004E   199    124
=X'8000'     1   00004F   200    140

                                  DIAGNOSTIC CROSS REFERENCE AND ASSEMBLER SUMMARY                             PAGE    6
                                                                                               AP101S 3.0 09.39 07/22/05
     NO STATEMENTS FLAGGED IN THIS ASSEMBLY
   OVERRIDING PARAMETERS-  ESD,RLD,SYSPARM=PASS
   OPTIONS FOR THIS ASSEMBLY
    NODECK,LOAD,LIST,XREF,NORENT,TEST,NOMULT,ALGN,ESD ,RLD ,NOSREF,LINECT= 80,MSGLEVEL=   0,SYSPARM= PASS
   NO OVERRIDING DD NAMES
     146 CARDS FROM SYSIN     404 CARDS FROM SYSLIB
     262 LINES OUTPUT          12 CARDS OUTPUT
