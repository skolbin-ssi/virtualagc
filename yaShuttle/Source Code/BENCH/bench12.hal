 BENCH12: PROGRAM;
   DECLARE IFAILCTR INTEGER INITIAL(0);
   DECLARE ND NAME ARRAY(10) INTEGER DOUBLE;
   DECLARE REFARRID ARRAY(10) INTEGER DOUBLE;
   DECLARE REFARRIS ARRAY(10) INTEGER SINGLE;
   DECLARE REFARRSD ARRAY(10) SCALAR DOUBLE;
   DECLARE REFARRSS ARRAY(10) SCALAR SINGLE;
   STRUCTURE STRUC1:
    1 SARRIS INTEGER SINGLE,
    1 SARRID INTEGER DOUBLE,
    1 SARRSD SCALAR DOUBLE;
   DECLARE STRUC1 STRUC1-STRUCTURE(10) INITIAL(1,2,3,4,5,6,7,8,9,10,
     21,22,23,24,25,26,27,28,29,30,51,52,53,54,55,56,57,58,59,60);
   DECLARE ARRID ARRAY(10) INTEGER DOUBLE INITIAL(101,102,103,104,
     105,106,107,108,109,110);
   DECLARE ARRIS ARRAY(10) INTEGER SINGLE INITIAL(11,12,13,14,
     15,16,17,18,19,20);
   DECLARE ARRSD ARRAY(10) SCALAR DOUBLE INITIAL(1001,1002,1003,1004,
     1005,1006,1007,1008,1009,1010);
   PROCID: PROCEDURE(INVAR,ITEST);
     DECLARE INVAR ARRAY(*) INTEGER DOUBLE;
     DECLARE ITEST INTEGER;
     IF INVAR NOT = REFARRID THEN DO;
       IFAILCTR = IFAILCTR + 1;
       WRITE(6) 'INVAR:   ',INVAR;
       WRITE(6) 'REFARRID: ',REFARRID;
       WRITE(6) 'TEST: ',ITEST,' FAILED';
     END;
   CLOSE PROCID;
   PROCIS: PROCEDURE(INVAR,ITEST);
     DECLARE INVAR ARRAY(*) INTEGER SINGLE;
     DECLARE ITEST INTEGER;
     IF INVAR NOT = REFARRIS THEN DO;
       IFAILCTR = IFAILCTR + 1;
       WRITE(6) 'INVAR:   ',INVAR;
       WRITE(6) 'REFARRIS: ',REFARRIS;
       WRITE(6) 'TEST: ',ITEST,' FAILED';
     END;
   CLOSE PROCIS;
   PROCSD: PROCEDURE(INVAR,ITEST);
     DECLARE INVAR ARRAY(*) SCALAR DOUBLE;
     DECLARE ITEST INTEGER;
     IF INVAR NOT = REFARRSD THEN DO;
       IFAILCTR = IFAILCTR + 1;
       WRITE(6) 'INVAR:   ',INVAR;
       WRITE(6) 'REFARRSD: ',REFARRSD;
       WRITE(6) 'TEST: ',ITEST,' FAILED';
     END;
   CLOSE PROCSD;
   PROCSS: PROCEDURE(INVAR,ITEST);
     DECLARE INVAR ARRAY(*) SCALAR SINGLE;
     DECLARE ITEST INTEGER;
     IF INVAR NOT = REFARRSS THEN DO;
       IFAILCTR = IFAILCTR + 1;
       WRITE(6) 'INVAR:   ',INVAR;
       WRITE(6) 'REFARRSS: ',REFARRSS;
       WRITE(6) 'TEST: ',ITEST,' FAILED';
     END;
   CLOSE PROCSS;
C
C TEST 1: ALL INTEGER DOUBLE + INTEGER DOUBLE --> INTEGER DOUBLE
C
   REFARRID = STRUC1.SARRID + ARRID;
   NAME(ND) = NAME(REFARRID);
   CALL PROCID(STRUC1.SARRID + ARRID,1);
C
C TEST 2: ALL INTEGER SINGLE + INTEGER SINGLE --> INTEGER DOUBLE
C
   REFARRID = STRUC1.SARRIS + ARRIS;
   NAME(ND) = NAME(REFARRID);
   CALL PROCID(STRUC1.SARRIS + ARRIS,2);
C
C TEST 3: ALL INTEGER DOUBLE + INTEGER SINGLE --> INTEGER DOUBLE
C
   REFARRID = STRUC1.SARRID + ARRIS;
   NAME(ND) = NAME(REFARRID);
   CALL PROCID(STRUC1.SARRID + ARRIS,3);
C
C TEST 4: ALL INTEGER SINGLE + INTEGER DOUBLE --> INTEGER DOUBLE
C
   REFARRID = STRUC1.SARRIS + ARRID;
   NAME(ND) = NAME(REFARRID);
   CALL PROCID(STRUC1.SARRIS + ARRID,4);
C
C TEST 5: ALL INTEGER DOUBLE + INTEGER DOUBLE --> INTEGER SINGLE
C
   REFARRIS = STRUC1.SARRID + ARRID;
   NAME(ND) = NAME(REFARRID);
   CALL PROCIS(STRUC1.SARRID + ARRID,5);
C
C TEST 6: ALL INTEGER SINGLE + INTEGER SINGLE --> INTEGER SINGLE
C
   REFARRIS = STRUC1.SARRIS + ARRIS;
   NAME(ND) = NAME(REFARRID);
   CALL PROCIS(STRUC1.SARRIS + ARRIS,6);
C
C TEST 7: ALL INTEGER DOUBLE + INTEGER SINGLE --> INTEGER SINGLE
C
   REFARRIS = STRUC1.SARRID + ARRIS;
   NAME(ND) = NAME(REFARRID);
   CALL PROCIS(STRUC1.SARRID + ARRIS,7);
C
C TEST 8: ALL INTEGER SINGLE + INTEGER DOUBLE --> INTEGER SINGLE
C
   REFARRIS = STRUC1.SARRIS + ARRID;
   NAME(ND) = NAME(REFARRID);
   CALL PROCIS(STRUC1.SARRIS + ARRID,4);
C
C TEST 9: ALL INTEGER DOUBLE + INTEGER DOUBLE --> SCALAR DOUBLE
C
   REFARRSD = STRUC1.SARRID + ARRID;
   NAME(ND) = NAME(REFARRID);
   CALL PROCSD(STRUC1.SARRID + ARRID,9);
C
C TEST 10: ALL INTEGER SINGLE + INTEGER SINGLE --> SCALAR DOUBLE
C
   REFARRSD = STRUC1.SARRIS + ARRIS;
   NAME(ND) = NAME(REFARRID);
   CALL PROCSD(STRUC1.SARRIS + ARRIS,10);
C
C TEST 11: ALL INTEGER DOUBLE + INTEGER SINGLE --> SCALAR DOUBLE
C
   REFARRSD = STRUC1.SARRID + ARRIS;
   NAME(ND) = NAME(REFARRID);
   CALL PROCSD(STRUC1.SARRID + ARRIS,11);
C
C TEST 12: ALL INTEGER SINGLE + INTEGER DOUBLE --> SCALAR DOUBLE
C
   REFARRSD = STRUC1.SARRIS + ARRID;
   NAME(ND) = NAME(REFARRID);
   CALL PROCSD(STRUC1.SARRIS + ARRID,12);
C
C TEST 13: ALL INTEGER DOUBLE + INTEGER DOUBLE --> SCALAR SINGLE
C
   REFARRSS = STRUC1.SARRID + ARRID;
   NAME(ND) = NAME(REFARRID);
   CALL PROCSS(STRUC1.SARRID + ARRID,13);
C
C TEST 14: ALL INTEGER SINGLE + INTEGER SINGLE --> SCALAR SINGLE
C
   REFARRSS = STRUC1.SARRIS + ARRIS;
   NAME(ND) = NAME(REFARRID);
   CALL PROCSS(STRUC1.SARRIS + ARRIS,14);
C
C TEST 15: ALL INTEGER DOUBLE + INTEGER SINGLE --> SCALAR SINGLE
C
   REFARRSS = STRUC1.SARRID + ARRIS;
   NAME(ND) = NAME(REFARRID);
   CALL PROCSS(STRUC1.SARRID + ARRIS,15);
C
C TEST 16: ALL INTEGER SINGLE + INTEGER DOUBLE --> SCALAR DOUBLE
C
   REFARRSS = STRUC1.SARRIS + ARRID;
   NAME(ND) = NAME(REFARRID);
   CALL PROCSS(STRUC1.SARRIS + ARRID,16);
C
C TERMINATION LOGIC
C
   WRITE(6) '# OF TEST FAILURES: ',IFAILCTR;
 CLOSE BENCH12;
