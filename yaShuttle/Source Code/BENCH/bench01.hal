 BENCH01: PROGRAM;
   DECLARE ND NAME ARRAY(10) BIT(32);
   DECLARE NDX NAME ARRAY(10) BIT (16);
   DECLARE REFARR ARRAY(10) BIT(32) INITIAL(10#BIN'0');
   DECLARE REFARRX ARRAY(10) BIT(16) INITIAL(10#BIN'0');
   DECLARE PARTARR1 ARRAY(10) BIT(32) INITIAL(HEX'F1F1F1F1',
     HEX'E2E2E2E2',HEX'D3D3D3D3',HEX'C4C4C4C4',HEX'B5B5B5B5',
     HEX'A6A6A6A6',HEX'97979797',HEX'88888888',HEX'79797979',
     HEX'6A6A6A6A');
   DECLARE PARTARR2 ARRAY(10) BIT(32) INITIAL(HEX'1234ABCD',
     HEX'5678EF01',HEX'9ABC2345',HEX'DEF06789',HEX'2345BCDE',
     HEX'6789F012',HEX'ABCD3456',HEX'EF01789A',HEX'3456CDEF',
     HEX'789A0123');
 PROC1: PROCEDURE (INARR,ITEST);
   DECLARE INARR ARRAY(*) BIT(32);
   DECLARE ITEST INTEGER;
   WRITE(6) 'ITEST = ',ITEST;
   WRITE(6) 'INARR = ',INARR;
   WRITE(6) 'REFARR = ',REFARR;
   IF INARR NOT = REFARR THEN DO;
     WRITE(6) 'FAILURE ON TEST: ',ITEST;
   END;
 CLOSE PROC1;
 PROC1X: PROCEDURE (INARR,ITEST);
   DECLARE INARR ARRAY(*) BIT(16);
   DECLARE ITEST INTEGER;
   WRITE(6) 'ITEST = ',ITEST;
   WRITE(6) 'INARR = ',INARR;
   WRITE(6) 'REFARRX = ',REFARRX;
   IF INARR NOT = REFARRX THEN DO;
     WRITE(6) 'FAILURE ON TEST: ',ITEST;
   END;
 CLOSE PROC1X;
   REFARR = PARTARR1 | PARTARR2;
   NAME(ND) = NAME(REFARR);
   CALL PROC1(PARTARR1|PARTARR2,1);
   REFARR = PARTARR1 & PARTARR2;
   NAME(ND) = NAME(REFARR);
   CALL PROC1(PARTARR1&PARTARR2,2);
   REFARR = XOR(PARTARR1,PARTARR2);
   NAME(ND) = NAME(REFARR);
   CALL PROC1(XOR(PARTARR1,PARTARR2),3);
C
   DO;
     TEMPORARY ARRAY(10) BIT(32), BTEMP1, BTEMP2;
     REFARR = PARTARR1$(*:17 AT 5) | PARTARR2$(*:17 AT 7);
     NAME(ND) = NAME(REFARR);
     BTEMP1 = PARTARR1$(*:17 AT 5);
     BTEMP2 = PARTARR2$(*:17 AT 7);
     CALL PROC1(BTEMP1|BTEMP2,4);
     REFARR = PARTARR1$(*:17 AT 5) & PARTARR2$(*:17 AT 7);
     NAME(ND) = NAME(REFARR);
     CALL PROC1(BTEMP1&BTEMP2,5);
     REFARR = XOR(PARTARR1$(*:17 AT 5),PARTARR2$(*:17 AT 7));
     NAME(ND) = NAME(REFARR);
     CALL PROC1(XOR(BTEMP1,BTEMP2),6);
   END;
C  REFARR = PARTARR1$(*:17 AT 5) | PARTARR2$(*:17 AT 7);
C  NAME(ND) = NAME(REFARR);
C  CALL PROC1(BIT(PARTARR1$(*:17 AT 5)) |
C     BIT(PARTARR2$(*:17 AT 7)),7);
C  REFARR = PARTARR1$(*:17 AT 5) & PARTARR2$(*:17 AT 7);
C  NAME(ND) = NAME(REFARR);
C  CALL PROC1(BIT(PARTARR1$(*:17 AT 5)) &
C     BIT(PARTARR2$(*:17 AT 7)),8);
C  REFARR = XOR(PARTARR1$(*:17 AT 5),PARTARR2$(*:17 AT 7));
C  NAME(ND) = NAME(REFARR);
C  CALL PROC1(XOR(BIT(PARTARR1$(*:17 AT 5)),
C     BIT(PARTARR2$(*:17 AT 7))),9);
C
   REFARRX = PARTARR1$(*:16 AT 17)|PARTARR2$(*:16 AT 17);
   NAME(NDX) = NAME(REFARRX);
   CALL PROC1X(PARTARR1$(*:16 AT 17)|PARTARR2$(*:16 AT 17),101);
   REFARRX = PARTARR1$(*:16 AT 17)&PARTARR2$(*:16 AT 17);
   NAME(NDX) = NAME(REFARRX);
   CALL PROC1X(PARTARR1$(*:16 AT 17)&PARTARR2$(*:16 AT 17),102);
   REFARRX = XOR(PARTARR1$(*:16 AT 17),PARTARR2$(*:16 AT 17));
   NAME(NDX) = NAME(REFARRX);
   CALL PROC1X(XOR(PARTARR1$(*:16 AT 17),PARTARR2$(*:16 AT 17)),103);
C
   REFARRX = PARTARR1$(*:16 AT 9)|PARTARR2$(*:16 AT 11);
   NAME(NDX) = NAME(REFARRX);
   CALL PROC1X(PARTARR1$(*:16 AT 9)|PARTARR2$(*:16 AT 11),104);
   REFARRX = PARTARR1$(*:16 AT 9)&PARTARR2$(*:16 AT 11);
   NAME(NDX) = NAME(REFARRX);
   CALL PROC1X(PARTARR1$(*:16 AT 9)&PARTARR2$(*:16 AT 11),105);
   REFARRX = XOR(PARTARR1$(*:16 AT 9),PARTARR2$(*:16 AT 11));
   NAME(NDX) = NAME(REFARRX);
   CALL PROC1X(XOR(PARTARR1$(*:16 AT 9),PARTARR2$(*:16 AT 11)),106);
 CLOSE BENCH01;
