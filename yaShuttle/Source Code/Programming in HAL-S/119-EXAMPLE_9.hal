C/ Adapted from PDF p. 119 of "Programming in HAL/S".  In case it isn't
C/ obvious, here's what this program does:  As input, it has an array 
C/ (V) of 3-vectors.  As output, it has a 3-array (BIGTHREE) of 
C/ 3-vectors, which is supposed to duplicate the 3 vectors from V that 
C/ are greatest in absolute value.  So the loop just checks each vector
C/ in V vs those in BIGTHREE, and if it finds one 
C/ that's greater in absolute value, kicks out the smallest vector from 
C/ BIGTHREE.  BIGTHREE is maintained in the order biggest (absolute 
C/ value) to smallest, and the replacement process maintains that order.

  EXAMPLE_9:
  PROGRAM;
     DECLARE V ARRAY(999) VECTOR(3);
     DECLARE BIGTHREE ARRAY(3) VECTOR(3) INITIAL(0) AUTOMATIC;
     DECLARE N INTEGER;         /*NUMBER OF ACTUAL ENTRIES IN V*/
     
     N = 25;
     DO FOR TEMPORARY I = 1 TO N;
        V$(I:) = VECTOR(RANDOM, RANDOM, RANDOM);
     END;
     
     DO FOR TEMPORARY I = 1 TO N;
  INNER:
        DO FOR TEMPORARY J = 1 TO 3;
E                   -               -
M          IF ABVAL(V  ) > ABVAL(BIGTHREE  ) THEN
S                    I:                  J:

              DO;
                 DO FOR TEMPORARY K = 3 TO J + 1 BY -1;
E                      -            -
M                   BIGTHREE   = BIGTHREE    ;
S                           K:           K-1:

                 END;
E                   -         -
M                BIGTHREE   = V  ;
S                        J:    I:

                 EXIT INNER;                          /* TRY NEW I */
              END;
        END INNER;
     END;
     
     DO FOR TEMPORARY I = 1 TO 3;
        WRITE(6) '(', ABVAL(BIGTHREE$(I:)), ')', BIGTHREE$(I:);
     END;
     WRITE(6) '-------------------------------------------------------';
     DO FOR TEMPORARY I = 1 TO N;
        WRITE(6) '(', ABVAL(V$(I:)), ')', V$(I:);
     END;
     
  CLOSE EXAMPLE_9;
  