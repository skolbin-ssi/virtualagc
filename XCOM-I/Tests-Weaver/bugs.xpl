
/* XPL BUGS */

DECLARE LETTERS CHARACTER INITIAL('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');

STRING_BUGS: PROCEDURE;
      DECLARE (STRING, TEXT, LINE, X1) CHARACTER;
      DECLARE (I, J) FIXED;

      /* STRING COMPARE TO NULL STRING */
      X1 = 'X';
      STRING = '';
      TEXT = SUBSTR(X1 || X1, 1);
      BYTE(TEXT, 0) = 0;
      IF STRING = TEXT THEN DO;
         OUTPUT = 'FAIL: LENGTH 1 STRING EQUALS LENGTH ZERO STRING.';
      END;

      /* SUBSTRING SHOULD RETURN A NULL STRING */
      I = 1;
      STRING = SUBSTR(X1, I);
      IF LENGTH(STRING) ~= 0 THEN DO;
         OUTPUT = 'FAIL: LENGTH(SUBSTR(''X'', 1)) IS NOT ZERO.';
      END;

      /* SUBSTRING SHOULD RETURN A NULL STRING */
      TEXT = 'ABC';
      STRING = SUBSTR(TEXT, 0, 0);
      IF LENGTH(STRING) ~= 0 THEN DO;
         OUTPUT = 'FAIL: LENGTH(SUBSTR(''ABC'', 0, 0)) IS NOT ZERO.';
      END;
   END STRING_BUGS;

COMPACTIFY_BUG: PROCEDURE;
      DECLARE (STRING, BUG) CHARACTER;

      BUG = 'A' || SUBSTR(LETTERS, 1, 9);
      CALL COMPACTIFY;
      BUG = BUG || SUBSTR(LETTERS, 10);
      STRING = '99' || BUG;
      CALL COMPACTIFY;
      IF BUG ~= LETTERS THEN DO;
         OUTPUT = 'FAIL: STRING CORRUPTED BY COMPACTIFY.';
      END;
   END COMPACTIFY_BUG;

SUM: PROCEDURE(X, Y) FIXED;
      DECLARE (X, Y) FIXED;
      RETURN X + Y;
   END SUM;

PARAMETER_BUG:
   PROCEDURE;
      DECLARE I FIXED;

      I = SUM(1, SUM(2, 0));
      IF I ~= 3 THEN DO;
         OUTPUT = 'FAIL: PARAMETER CORRUPTED SUM(1, SUM(2, 0))';
      END;
   END PARAMETER_BUG;

CALL STRING_BUGS;
CALL COMPACTIFY_BUG;
CALL PARAMETER_BUG;

EOF;

